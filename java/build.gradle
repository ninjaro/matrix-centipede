plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'net.java.dev.jna:jna:5.14.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5:1.9.22'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

kotlin {
    jvmToolchain(17)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform { options ->
        def includeTagsValue = project.findProperty('includeTags')?.toString()
        if (includeTagsValue) {
            def tags = includeTagsValue.split(',')
                    .collect { value -> value.trim() }
                    .findAll { value -> !value.isEmpty() }
            if (!tags.isEmpty()) {
                options.includeTags(tags as String[])
            }
        }
    }
    filter {
        excludeTestsMatching('*$Companion')
    }
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        exceptionFormat 'full'
    }
    def nativeLibraryPathValue = project.findProperty('nativeLibraryPath')?.toString()
    if (nativeLibraryPathValue && !nativeLibraryPathValue.isBlank()) {
        systemProperty 'jna.library.path', nativeLibraryPathValue
        systemProperty 'java.library.path', nativeLibraryPathValue
    }
}
